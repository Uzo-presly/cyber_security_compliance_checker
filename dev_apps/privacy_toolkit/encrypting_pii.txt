python Encryption Tool for PII but is not as powerful as t-_encrypt_pii.py script as it does not prompt you for a key
instead it assumes the key file is present in the same folder with the python file running it. This option can be a problem if the key-file goes missing.

This script encrypts sensitive data (e.g., names, phone numbers) using Fernet encryption.
STEP 1: Document the Raw PII in a File

You create and update a file like plaintext_data.txt:

John Doe, +2348012345678, No. 5 Alpha Street, Lagos
Ngozi Uzochi, +2348076543210, No. 7 Beta Road, Abuja

This is your ongoing documentation. You keep adding to this file.

 Staff Usage Workflow
üîê STEP 1: The Admin (You) Initializes the System

python encrypting_pii.py --generate-key

    You'll be prompted to set a shared password (e.g., "TeamAccess123").

    This creates:

        A real key (used for encryption)

        An encrypted version of that key: encrypted_key.key

    The plaintext_data.txt file can now be filled with sensitive data like:

John Doe, 08012345678, 123 Abuja Lane
Ngozi Uzochi, 07098765432, 45 Enugu Street

‚úçÔ∏è STEP 2: Update and Encrypt Data Anytime

python encrypting_pii.py --encrypt

    Staff enters the shared password to unlock the encryption key.

    plaintext_data.txt is encrypted into encrypted_data.txt.

üîì STEP 3: Any Staff Can Decrypt

python encrypting_pii.py --decrypt

    Staff is prompted for the shared password.

    If it's correct, the encrypted data is decrypted and shown.

üì¶ Summary of File Roles
File	Purpose
plaintext_data.txt	The original info (editable, only on central hub PC)
encrypted_data.txt	The protected version (can be backed up, shared)
encrypted_key.key	Holds the real encryption key but locked with a password
encrypting_pii.py	Script that manages all actions
Shared Password	Known by the 3 staff members only
üîê Optional Security Tips

    Store plaintext_data.txt only on a secure hub PC. Not to be synced or emailed.

    The 3 staff should each know the shared password but not copy the raw encryption key file to their own devices.

    Back up encrypted_data.txt and encrypted_key.key somewhere safe (e.g., USB, cloud with access control).
